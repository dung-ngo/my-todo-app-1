{"version":3,"sources":["components/TodoItem.js","components/Todos.js","components/layout/Header.js","components/layout/Footer.js","store/containers/Footer.js","store/actions/changeThemeAction.js","components/AddTodo.js","components/TodoApp.js","store/reducers/themeReducer.js","store/reducers/index.js","index.js"],"names":["TodoItem","this","props","todo","completed","id","title","className","type","checked","onChange","handleChange","onClick","deleteTodo","React","Component","Todos","todos","map","Header","Footer","submitThemeColor","bind","color","console","log","saveColorTheme","nextprops","JSON","stringify","document","documentElement","style","setProperty","themeColor","connect","state","dispatch","payload","saveTheme","AddTodo","useState","setTitle","onSubmit","e","preventDefault","addTodo","placeholder","value","target","TodoApp","setState","useEffect","axios","get","params","_limit","then","response","data","todoData","uuidv4","post","delete","filter","initState","combineReducers","action","Object","assign","store","createStore","rootReducer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.73f8d44f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass TodoItem extends React.Component {\r\n    render() {\r\n        const {completed, id, title} = this.props.todo;\r\n        return (\r\n            <li className=\"todo-item\">\r\n                <input  type=\"checkbox\" \r\n                        checked={completed}\r\n                        onChange={()=>this.props.handleChange(id)}/>\r\n                        <span className={completed ? \"completed\" : null}>\r\n                            {title}\r\n                        </span>\r\n                        <button className=\"btn-style\" onClick={()=>this.props.deleteTodo(id)}>X</button>\r\n                                \r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoItem;","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nclass Todos extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {this.props.todos.map(todo => (\r\n                        <TodoItem   key={todo.id}\r\n                                    todo={todo}\r\n                                    handleChange={this.props.handleChange}\r\n                                    deleteTodo={this.props.deleteTodo} />\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Todos;","import React from \"react\";\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <header className=\"header-container\">\r\n                <h1 className=\"header-title\">Simple Todo App</h1>\r\n            </header>\r\n        );\r\n    }\r\n};\r\nexport default Header;","import React from 'react';\r\n\r\nconst RED = \"#ff0000\";\r\nconst BLUE = \"#0000ff\";\r\nconst GRAY = \"#678c89\";\r\n\r\nclass Footer extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.submitThemeColor = this.submitThemeColor.bind(this);\r\n    }\r\n\r\n    submitThemeColor(color){\r\n        if(color) {\r\n            console.log('handleChangeTheme')\r\n            this.props.saveColorTheme(color)\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextprops){\r\n        console.log('UNSAFE_componentWillReceiveProps: '+JSON.stringify(nextprops))\r\n        document.documentElement.style.setProperty(\"--main-color\", nextprops.themeColor.color);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"footer\">\r\n                <div className=\"vertical-center\">\r\n                    <span>Choose Theme </span>\r\n                    <button onClick={()=>this.submitThemeColor(RED)} className=\"dot red\"/>\r\n                    <button onClick={()=>this.submitThemeColor(BLUE)} className=\"dot blue\"/>\r\n                    <button onClick={()=>this.submitThemeColor(GRAY)} className=\"dot gray\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Footer;","import { connect } from 'react-redux';\r\nimport { saveTheme } from '../actions/changeThemeAction';\r\nimport Footer from '../../components/layout/Footer';\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatch,\r\n    saveColorTheme: color => dispatch(saveTheme(color))\r\n})\r\nfunction mapStateToProps(state){\r\n    return {\r\n        themeColor: state.color\r\n    }\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Footer);","export const saveTheme = color => ({\r\n    type: \"CHANGE_THEME\",\r\n    payload: {\r\n        color\r\n    }\r\n})","import React, {useState} from \"react\";\r\nimport axios from \"axios\"; \r\n\r\nfunction AddTodo (props) {\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    const onInputChange = e => {\r\n        setTitle(e.target.value)\r\n    }\r\n    const addTodo = e => {\r\n        e.preventDefault();\r\n        props.addTodo(title);\r\n        setTitle(\"\");\r\n    }\r\n    \r\n    return (\r\n        <form className=\"form-container\" onSubmit={addTodo}>\r\n            <input  type=\"text\" placeholder=\"Add Todo...\" className=\"input-text\"\r\n                    value={title}\r\n                    onChange={onInputChange} />\r\n            <input type=\"submit\" value=\"Submit\" className=\"input-submit\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTodo;","import React, {useState, useEffect} from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from \"axios\";\r\nimport Todos from \"./Todos\";\r\nimport Header from './layout/Header';\r\nimport Footer from '../store/containers/Footer';\r\nimport AddTodo from \"./AddTodo\"\r\n\r\nfunction TodoApp() {\r\n    const [state, setState] = useState({\r\n        todos: []\r\n    })\r\n\r\n    const handleCheckbox = id => {\r\n        setState({\r\n            todos: state.todos.map(todo => {\r\n                if(todo.id === id){\r\n                    todo.completed = !todo.completed;\r\n                }\r\n                return todo;\r\n            })\r\n        })\r\n    }\r\n    const deleteTodo = id => {\r\n        axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n            .then(response => setState({\r\n                todos: [\r\n                    ...state.todos.filter(todo => {\r\n                        return todo.id !== id;\r\n                    })\r\n                ]\r\n            }))\r\n    }\r\n    const addTodo = title => {\r\n        const todoData = {\r\n            id: uuidv4(),\r\n            title: title,\r\n            completed: false\r\n        }\r\n        axios.post(\"https://jsonplaceholder.typicode.com/todos\", todoData)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                setState({\r\n                    todos: [...state.todos, todoData]\r\n                })\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const config = {\r\n            params: {\r\n                _limit: 5\r\n            }\r\n        };\r\n        axios.get(\"https://jsonplaceholder.typicode.com/todos\", config)\r\n        .then(response => setState({todos: response.data}));\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Header />\r\n            <AddTodo addTodo={addTodo} />\r\n            <Todos  todos={state.todos}\r\n                    handleChange={handleCheckbox}\r\n                    deleteTodo={deleteTodo} />\r\n            <Footer />\r\n        </div>\r\n    );\r\n}   \r\n\r\nexport default TodoApp;","let initState = {\r\n    color: \"#FFFFFF\"\r\n}\r\nexport default function themeReducer(state=initState, action){\r\n    switch(action.type){\r\n        case 'CHANGE_THEME':\r\n            console.log('themeReducer: '+ JSON.stringify(state))\r\n            return Object.assign({}, state, {\r\n                color: action.payload.color\r\n            })\r\n        default:\r\n            return initState;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport color from './themeReducer';\r\n\r\nexport default combineReducers({\r\n    color\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\nimport TodoApp from './components/TodoApp';\n\nimport { createStore} from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <TodoApp />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}